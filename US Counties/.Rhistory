us_counties_json@proj4string
#converting to geojson
merged_county_data_geojson <- geojson_json(merged_county_data_geojson, convert_wgs84 = TRUE)
library(tidyverse)
library(mapdata)
View(counties)
counties[,c(1:2, 5:6)]
counties <- counties[,c(1:2, 5:6)]
#I'll need to join the two by State Name and County - I'll match the counties df to the merged_counties_df
colnames(counties)[3] <- "STNAME"
colnames(counties)[4] <- "county_name"
library(stringi)
stri_trans_totitle(counties$STNAME)
counties$STNAME <-  stri_trans_totitle(counties$STNAME)
counties$county_name <- stri_trans_totitle(counties$county_name)
rm(merged_county_data_geojson)
#subsetting data I need - I only want 2019 pop estimates and change yoy
merged_county_data_copy <- merged_county_data[,c(1:14,25,36)]
# Joininng the two
merged_county_data_copy_2 <- inner_join(counties, merged_county_data_copy, by = c("county_name", "STNAME"))
View(merged_county_data_copy_2)
save.image("C:/Users/yungz/Desktop/Ben R/R Projects/US Counties and Population/US Counties/.RData")
library(leaflet)
library(rgdal)
library(sf)
options(viewer = NULL)
leaflet(merged_county_data_copy_2)
options(viewer = NULL)
leaflet(merged_county_data_copy_2) %>%
addTiles()
options(viewer = NULL)
leaflet(merged_county_data_copy_2) %>%
setView(-93.65, 42.0285, zoom = 6) %>%
addTiles()
options(viewer = NULL)
leaflet(merged_county_data_copy_2) %>%
setView(-93.65, 42.0285, zoom = 10) %>%
addTiles()
options(viewer = NULL)
leaflet(merged_county_data_copy_2) %>%
setView(-93.65, 42.0285, zoom = 3) %>%
addTiles()
options(viewer = NULL)
leaflet(merged_county_data_copy_2) %>%
setView(-93.65, 42.0285, zoom = 4) %>%
addTiles()
options(viewer = NULL)
leaflet(merged_county_data_copy_2) %>%
setView(-93.65, 42.0285, zoom = 4) %>%
addTiles()
?addPolygons()
View(merged_county_data_copy_2)
options(viewer = NULL)
leaflet(merged_county_data_copy_2) %>%
setView(-93.65, 42.0285, zoom = 4) %>%
addTiles() %>%
addPolygons(lng = long, lat = lat)
options(viewer = NULL)
leaflet(merged_county_data_copy_2) %>%
setView(-93.65, 42.0285, zoom = 4) %>%
addTiles() %>%
addPolygons(lng = merged_county_data_copy_2$long, lat = merged_county_data_copy_2$lat)
options(viewer = NULL)
leaflet(merged_county_data_copy_2) %>%
setView(-93.65, 42.0285, zoom = 4) %>%
addTiles() %>%
addPolygons(lng = merged_county_data_copy_2$long, lat = merged_county_data_copy_2$lat,
fillColor = ~pal(log10(merged_county_data_copy_2$POPESTIMATE2018)))
options(viewer = NULL)
leaflet(merged_county_data_copy_2) %>%
setView(-93.65, 42.0285, zoom = 4) %>%
addTiles() %>%
addPolygons(lng = merged_county_data_copy_2$long, lat = merged_county_data_copy_2$lat,
fillColor = ~pal(log10(merged_county_data_copy_2$POPESTIMATE2018)))
options(viewer = NULL)
leaflet(merged_county_data_copy_2) %>%
setView(-93.65, 42.0285, zoom = 4) %>%
addTiles() %>%
addPolygons(lng = merged_county_data_copy_2$long, lat = merged_county_data_copy_2$lat,
fillColor = ~pal(log10(merged_county_data_copy_2$POPESTIMATE2018)),
smoothFactor = .2)
#converting to geojson
library(geojsonio)
?geojson_json()
merged_county_data_geojson <- geojson_json(merged_county_data_copy_2,
lat = merged_county_data_copy_2$lat,
lon = merged_county_data_copy_2$long,
group = merged_county_data_copy_2$county_name)
options(viewer = NULL)
leaflet(us_counties_json) %>%
setView(-93.65, 42.0285, zoom = 4) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(us_counties_json$merged_us_counties_POPESTIMATE2019)))
options(viewer = NULL)
leaflet(us_counties_json) %>%
setView(-93.65, 42.0285, zoom = 4) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(us_counties_json$merged_us_counties_POPESTIMATE2019))) %>%
addLegend(position = "bottomleft", pal = pal,
values = ~us_counties_json$merged_us_counties_POPESTIMATE2019)
options(viewer = NULL)
leaflet(us_counties_json) %>%
setView(-93.65, 42.0285, zoom = 4) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(us_counties_json$merged_us_counties_POPESTIMATE2019))) %>%
addLegend(position = "bottomleft", pal = pal,
values = ~us_counties_json$merged_us_counties_POPESTIMATE2019,
title = "2019 Population Estimates")
options(viewer = NULL)
leaflet(us_counties_json) %>%
setView(-93.65, 42.0285, zoom = 4) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(us_counties_json$merged_us_counties_POPESTIMATE2019))) %>%
addLegend(position = "bottomleft", pal = pal,
values = ~na.omit(us_counties_json$merged_us_counties_POPESTIMATE2019),
title = "2019 Population Estimates")
setwd()
getwd()
save.image("C:/Users/yungz/Desktop/Ben R/R Projects/US Counties and Population/US Counties/.RData")
us_counties_json$merged_us_counties_POPESTIMATE2019
us_counties_json[1]
us_counties_json[30]
View(merged_county_data)
rm(merged_county_data_copy_2)
colnames(merged_county_data)
table_data <- merged_county_data
View(table_data)
table_data <- table_data[,-c(1:5,7:13)]
colnames(table_data)
table_data <- merged_county_data
table_data
colnames(table_data)
table_data <- table_data[,c(6,14,26,36)]
colnames(table_data)[1] <- "County"
colnames(table_data)[2] <- "State"
colnames(table_data)[3] <- "2019 Population"
colnames(table_data)[4] <- "YoY Change"
formatC(table_data$`2019 Population`,format="f", big.mark=",", digits=0)
table_data$`2019 Population` <-  formatC(table_data$`2019 Population`,format="f", big.mark=",", digits=0)
library(leaflet
library(leaflet)
save.image("C:/Users/yungz/Desktop/Ben R/R Projects/US Counties and Population/US Counties/.RData")
?addMarkers()
#subsetting data I need - I only want 2019 pop estimates and change yoy
merged_county_data_copy <- merged_county_data[,c(1:14,25,36)]
library(mapdata)
counties <- map_data("county")
counties <- counties[,c(1:2, 5:6)]
#I'll need to join the two by State Name and County - I'll match the counties df to the merged_counties_df
colnames(counties)[3] <- "STNAME"
colnames(counties)[4] <- "county_name"
#capitalize counties df STNANE and county_name
library(stringi)
counties$STNAME <-  stri_trans_totitle(counties$STNAME)
counties$county_name <- stri_trans_totitle(counties$county_name)
# Joininng the two
merged_county_data_copy_2 <- inner_join(counties, merged_county_data_copy, by = c("county_name", "STNAME"))
#getting the long and lat for each county
library(mapdata)
library(ggmap)
library(tidyverse)
library(mapdata)
counties <- map_data("county")
counties <- counties[,c(1:2, 5:6)]
#I'll need to join the two by State Name and County - I'll match the counties df to the merged_counties_df
colnames(counties)[3] <- "STNAME"
colnames(counties)[4] <- "county_name"
#capitalize counties df STNANE and county_name
library(stringi)
counties$STNAME <-  stri_trans_totitle(counties$STNAME)
counties$county_name <- stri_trans_totitle(counties$county_name)
# Joininng the two
merged_county_data_copy_2 <- inner_join(counties, merged_county_data_copy, by = c("county_name", "STNAME"))
View(merged_county_data)
merged_county_data_copy <- merged_county_data[,c(1:14,26,36)]
#getting the long and lat for each county
library(mapdata)
counties <- map_data("county")
counties <- counties[,c(1:2, 5:6)]
#I'll need to join the two by State Name and County - I'll match the counties df to the merged_counties_df
colnames(counties)[3] <- "STNAME"
colnames(counties)[4] <- "county_name"
#capitalize counties df STNANE and county_name
library(stringi)
counties$STNAME <-  stri_trans_totitle(counties$STNAME)
counties$county_name <- stri_trans_totitle(counties$county_name)
# Joininng the two
merged_county_data_copy_2 <- inner_join(counties, merged_county_data_copy, by = c("county_name", "STNAME"))
View(merged_county_data_copy_2)
options(viewer = NULL)
leaflet(us_counties_json) %>%
setView(-93.65, 42.0285, zoom = 4) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(us_counties_json$merged_us_counties_POPESTIMATE2019))) %>%
addLegend(position = "bottomleft", pal = pal,
values = ~na.omit(us_counties_json$merged_us_counties_POPESTIMATE2019),
title = "2019 Population Estimates") %>%
addPopups(data = merged_county_data_copy_2$POPESTIMATE2019, lng = merged_county_data_copy_2$long,
lat = merged_county_data_copy_2$lat)
options(viewer = NULL)
leaflet(us_counties_json) %>%
setView(-93.65, 42.0285, zoom = 4) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(us_counties_json$merged_us_counties_POPESTIMATE2019))) %>%
addLegend(position = "bottomleft", pal = pal,
values = ~na.omit(us_counties_json$merged_us_counties_POPESTIMATE2019),
title = "2019 Population Estimates") %>%
addPopups(data = merged_county_data_copy_2, lng = merged_county_data_copy_2$long,
lat = merged_county_data_copy_2$lat,
popup = ~paste(merged_county_data_copy_2$county_name,
formatC(merged_county_data_copy_2$POPESTIMATE2019,format="f", big.mark=",", digits=0)))
options(viewer = NULL)
leaflet(us_counties_json) %>%
setView(-93.65, 42.0285, zoom = 4) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(us_counties_json$merged_us_counties_POPESTIMATE2019))) %>%
addLegend(position = "bottomleft", pal = pal,
values = ~na.omit(us_counties_json$merged_us_counties_POPESTIMATE2019),
title = "2019 Population Estimates") %>%
addPopups(data = merged_county_data_copy_2, lng = merged_county_data_copy_2$long,
lat = merged_county_data_copy_2$lat,
popup = ~paste(merged_county_data_copy_2$county_name,
formatC(merged_county_data_copy_2$POPESTIMATE2019,format="f", big.mark=",", digits=0)),
group = merged_county_data_copy_2$county_name)
options(viewer = NULL)
leaflet(us_counties_json) %>%
setView(-93.65, 42.0285, zoom = 4) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(us_counties_json$merged_us_counties_POPESTIMATE2019))) %>%
addLegend(position = "bottomleft", pal = pal,
values = ~na.omit(us_counties_json$merged_us_counties_POPESTIMATE2019),
title = "2019 Population Estimates") %>%
addPopups(popup = us_counties_json$merged_us_counties_POPESTIMATE2019)
!unique(table_data$County)
unique(table_data$County)
!(unique(table_data$County))
which(!(unique(table_data$County)))
data.frame(table(table_data$County))
data.frame(table(table_data$County), table_data$State)
data.frame(table(table_data$County, table_data$State))
n_occur <- data.frame(table(table_data$County, table_data$State))
n_occur[n_occur$Freq > 1,]
rm(merged_county_data_copy_2)
sort(n_occur$Freq)
n_occur[n_occur$Freq > 1,]
which(table_data$County == "Baltimore")
which(table_data$County == "St. Louis")
which(table_data$County == "Fairfax")
which(table_data$County == "Franklin")
n_occur[n_occur$Freq > 1,]
which(table_data$County == "Franklin" & table_data$State == "Virginia")
which(table_data$County == "Richmond")
which(table_data$County == "Richmond" & table_data$State == "Virginia")
which(table_data$County == "Roanoke" & table_data$State == "Virginia")
View(n_occur)
library(tidyverse)
which(table_data$County == "Baltimore")
View(table_data)
table_data %>%
filter(County == "Baltimore")
table_data %>%
filter(County == "Stafford")
table_data %>%
filter(County == "Durham")
table_data %>%
filter(County == "Stratham")
table_data %>%
filter(County == "Rockingham")
which(table_data$County == "Baltimore")
table_data[-295,]
table_data <- table_data[-295,]
which(table_data$County == "St. Louis")
table_data <- table_data[-645,]
which(table_data$County == "St. Louis")
table_data <- merged_county_data
table_data <- table_data[,c(6,14,26,36)]
colnames(table_data)[1] <- "County"
colnames(table_data)[2] <- "State"
colnames(table_data)[3] <- "2019 Population"
colnames(table_data)[4] <- "YoY Change"
table_data$`2019 Population` <-  formatC(table_data$`2019 Population`,format="f", big.mark=",", digits=0)
# getting duplicate counties and states - some appear more than once
n_occur <- data.frame(table(table_data$County, table_data$State))
n_occur[n_occur$Freq > 1,]
which(table_data$County == "St. Louis")
which(table_data$County == "Fairfax")
which(table_data$County == "Franklin" & table_data$State == "Virginia")
which(table_data$County == "Richmond" & table_data$State == "Virginia")
which(table_data$County == "Roanoke" & table_data$State == "Virginia")
# removing rows with duplicates
#removing baltimore city
which(table_data$County == "Baltimore")
table_data <- table_data[-295,]
#removing baltimore city
which(table_data$County == "Baltimore")
table_data <- table_data[-295,]
#removing baltimore city
which(table_data$County == "Baltimore")
table_data <- table_data[-1640,]
View(table_data)
table_data <- merged_county_data
table_data <- table_data[,c(6,14,26,36)]
colnames(table_data)[1] <- "County"
colnames(table_data)[2] <- "State"
colnames(table_data)[3] <- "2019 Population"
colnames(table_data)[4] <- "YoY Change"
table_data$`2019 Population` <-  formatC(table_data$`2019 Population`,format="f", big.mark=",", digits=0)
# getting duplicate counties and states - some appear more than once
n_occur <- data.frame(table(table_data$County, table_data$State))
n_occur[n_occur$Freq > 1,]
which(table_data$County == "St. Louis")
str(table_data)
hich(table_data$County == "Baltimore")
which(table_data$County == "St. Louis")
which(table_data$County == "Fairfax")
which(table_data$County == "Franklin" & table_data$State == "Virginia")
which(table_data$County == "Richmond" & table_data$State == "Virginia")
which(table_data$County == "Roanoke" & table_data$State == "Virginia")
which(table_data$County == "Baltimore")
which(table_data$County == "St. Louis")
which(table_data$County == "Fairfax")
which(table_data$County == "Franklin" & table_data$State == "Virginia")
which(table_data$County == "Richmond" & table_data$State == "Virginia")
which(table_data$County == "Roanoke" & table_data$State == "Virginia")
table_data <- table_data[-c(295,1640,645,2137,488,1012,583,2071,977,2138,1347,2322),]
which(table_data$County == "Baltimore")
which(table_data$County == "St. Louis")
which(table_data$County == "Fairfax")
which(table_data$County == "Franklin" & table_data$State == "Virginia")
which(table_data$County == "Richmond" & table_data$State == "Virginia")
table_data <- merged_county_data
table_data <- table_data[,c(6,14,26,36)]
colnames(table_data)[1] <- "County"
colnames(table_data)[2] <- "State"
colnames(table_data)[3] <- "2019 Population"
colnames(table_data)[4] <- "YoY Change"
table_data$`2019 Population` <-  formatC(table_data$`2019 Population`,format="f", big.mark=",", digits=0)
# getting duplicate counties and states - some appear more than once
n_occur <- data.frame(table(table_data$County, table_data$State))
n_occur[n_occur$Freq > 1,]
which(table_data$County == "Franklin" & table_data$State == "Virginia")
which(table_data$County == "Richmond" & table_data$State == "Virginia")
which(table_data$County == "Roanoke" & table_data$State == "Virginia")
table_data <- table_data[-c(295,1640,1639,645,2137,2136,488,
1012,1011,583,2070,2071,977,2138,2139,
1347,2322,2323),]
which(table_data$County == "Baltimore")
which(table_data$County == "St. Louis")
which(table_data$County == "Fairfax")
which(table_data$County == "Franklin" & table_data$State == "Virginia")
which(table_data$County == "Richmond" & table_data$State == "Virginia")
which(table_data$County == "Roanoke" & table_data$State == "Virginia")
table_data %>%
arrange(State, County)
table_data <- table_data %>%
arrange(State, County)
save.image("C:/Users/yungz/Desktop/Ben R/R Projects/US Counties and Population/US Counties/.RData")
pal <- colorNumeric(
palette = "Blues",
domain = us_counties_json$merged_us_counties_POPESTIMATE2019)
# using leaflet to map
library(leaflet)
pal <- colorNumeric(
palette = "Blues",
domain = us_counties_json$merged_us_counties_POPESTIMATE2019)
options(viewer = NULL)
leaflet(us_counties_json) %>%
setView(-93.65, 42.0285, zoom = 4) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(us_counties_json$merged_us_counties_POPESTIMATE2019)) %>%
addLegend(position = "bottomleft", pal = pal,
values = ~na.omit(us_counties_json$merged_us_counties_POPESTIMATE2019),
title = "2019 Population Estimates")
options(viewer = NULL)
leaflet(us_counties_json) %>%
setView(-93.65, 42.0285, zoom = 4) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(us_counties_json$merged_us_counties_POPESTIMATE2019))) %>%
addLegend(position = "bottomleft", pal = pal,
values = ~na.omit(us_counties_json$merged_us_counties_POPESTIMATE2019),
title = "2019 Population Estimates")
?colorNumeric()
pal <- colorNumeric(
palette = "Blues",
domain = us_counties_json$merged_us_counties_POPESTIMATE2019,
bins = 10)
pal <- colorBin(
palette = "Blues",
domain = us_counties_json$merged_us_counties_POPESTIMATE2019,
bins = 10)
options(viewer = NULL)
leaflet(us_counties_json) %>%
setView(-93.65, 42.0285, zoom = 4) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(us_counties_json$merged_us_counties_POPESTIMATE2019)) %>%
addLegend(position = "bottomleft", pal = pal,
values = ~na.omit(us_counties_json$merged_us_counties_POPESTIMATE2019),
title = "2019 Population Estimates")
pal <- colorBin(
palette = "Blues",
domain = us_counties_json$merged_us_counties_POPESTIMATE2019,
bins = 5)
options(viewer = NULL)
leaflet(us_counties_json) %>%
setView(-93.65, 42.0285, zoom = 4) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(us_counties_json$merged_us_counties_POPESTIMATE2019)) %>%
addLegend(position = "bottomleft", pal = pal,
values = ~na.omit(us_counties_json$merged_us_counties_POPESTIMATE2019),
title = "2019 Population Estimates")
pal <- colorBin(
palette = "Blues",
domain = us_counties_json$merged_us_counties_POPESTIMATE2019,
bins = 5,
pretty = TRUE)
options(viewer = NULL)
leaflet(us_counties_json) %>%
setView(-93.65, 42.0285, zoom = 4) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(us_counties_json$merged_us_counties_POPESTIMATE2019)) %>%
addLegend(position = "bottomleft", pal = pal,
values = ~na.omit(us_counties_json$merged_us_counties_POPESTIMATE2019),
title = "2019 Population Estimates")
pal <- colorQuantile(
palette = "Blues",
domain = us_counties_json$merged_us_counties_POPESTIMATE2019,
n = 4
)
options(viewer = NULL)
leaflet(us_counties_json) %>%
setView(-93.65, 42.0285, zoom = 4) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(us_counties_json$merged_us_counties_POPESTIMATE2019)) %>%
addLegend(position = "bottomleft", pal = pal,
values = ~na.omit(us_counties_json$merged_us_counties_POPESTIMATE2019),
title = "2019 Population Estimates")
pal <- colorBin(
palette = "Blues",
domain = us_counties_json$merged_us_counties_POPESTIMATE2019,
bins = 5,
pretty = TRUE,
reverse = TRUE)
options(viewer = NULL)
leaflet(us_counties_json) %>%
setView(-93.65, 42.0285, zoom = 4) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(us_counties_json$merged_us_counties_POPESTIMATE2019)) %>%
addLegend(position = "bottomleft", pal = pal,
values = ~na.omit(us_counties_json$merged_us_counties_POPESTIMATE2019),
title = "2019 Population Estimates")
pal <- colorNumeric(
palette = "Blues",
domain = us_counties_json$merged_us_counties_POPESTIMATE2019,
pretty = TRUE,
reverse = TRUE)
pal <- colorNumeric(
palette = "Blues",
domain = us_counties_json$merged_us_counties_POPESTIMATE2019,
reverse = TRUE)
options(viewer = NULL)
leaflet(us_counties_json) %>%
setView(-93.65, 42.0285, zoom = 4) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(us_counties_json$merged_us_counties_POPESTIMATE2019)) %>%
addLegend(position = "bottomleft", pal = pal,
values = ~na.omit(us_counties_json$merged_us_counties_POPESTIMATE2019),
title = "2019 Population Estimates")
log10(3)
log10(30)
options(viewer = NULL)
leaflet(us_counties_json) %>%
setView(-93.65, 42.0285, zoom = 4) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(log10(us_counties_json$merged_us_counties_POPESTIMATE2019))) %>%
addLegend(position = "bottomleft", pal = pal,
values = ~na.omit(us_counties_json$merged_us_counties_POPESTIMATE2019),
title = "2019 Population Estimates")
pal <- colorNumeric(
palette = "Blues",
domain = us_counties_json$merged_us_counties_POPESTIMATE2019,
reverse = TRUE)
options(viewer = NULL)
leaflet(us_counties_json) %>%
setView(-93.65, 42.0285, zoom = 4) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 1,
fillColor = ~pal(us_counties_json$merged_us_counties_POPESTIMATE2019)) %>%
addLegend(position = "bottomleft", pal = pal,
values = ~na.omit(us_counties_json$merged_us_counties_POPESTIMATE2019),
title = "2019 Population Estimates")
pal <- colorNumeric(
palette = "Blues",
domain = us_counties_json$merged_us_counties_POPESTIMATE2019,
reverse = TRUE)
save.image("C:/Users/yungz/Desktop/Ben R/R Projects/US Counties and Population/US Counties/.RData")
